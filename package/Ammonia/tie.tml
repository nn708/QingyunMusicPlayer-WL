// TM Ammonia Package - Tie Notations
// Updated: 2018.5.9.

# Notation

class TieNotation {
  constructor() {
    this.syntax = {
      default: [
        FSM.item('Tie', /^\^/)
      ]
    }

    this.attributes = {
      Tie: {
        detok: '^',
        preserve: false
      }
    }

    this.meta = {
      LastNotes: [],
      FirstNotes: []
    }
  }

  epiNote() {
    if (this.Result.length > 0 && this.Meta.FirstNotes.length === 0) {
      this.Meta.FirstNotes = this.Result
    }
    const lastNotes = []
    if (this.Meta.After.Tie) {
      this.Meta.After.Tie = false
      this.Meta.LastNotes.forEach(lastNote => {
        const index = this.Result.findIndex(note => {
          return lastNote.Pitch === note.Pitch && lastNote.Volume === note.Volume
        })
        if (index === -1) return
        const currNote = this.Result[index]
        lastNotes.push(lastNote)
        lastNote.Duration = currNote.StartTime + currNote.Duration - lastNote.StartTime
        this.Result.splice(index, 1)
      })
    }
    this.Meta.LastNotes = lastNotes.concat(this.Result)
  }

  proMerge(subtrack1, subtrack2) {
    if (subtrack1.Meta.After.Tie) {
      subtrack1.Meta.LastNotes.forEach(lastNote => {
        const index = subtrack2.Meta.FirstNotes.findIndex(note => {
          return lastNote.Pitch === note.Pitch && lastNote.Volume === note.Volume
        })
        if (index === -1) return
        const firstNote = subtrack2.Meta.FirstNotes[index]
        lastNotes.push(lastNote)
        lastNote.Duration = firstNote.StartTime + firstNote.Duration + subtrack1.Meta.Duration - firstNote.StartTime
        subtrack2.Meta.FirstNotes.splice(index, 1)
      })
    }
  }
}

# End
