(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     11718,        291]
NotebookOptionsPosition[      2959,         83]
NotebookOutlinePosition[     11631,        290]
CellTagsIndexPosition[     11538,        284]
WindowTitle-> Thulium Music Player 2.3
WindowFrame->ModelessDialog*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Thulium", " ", "Music", " ", "Player"}],
   FontFamily->"Source Sans Pro",
   FontSize->32,
   FontColor->RGBColor[0.1, 0.4, 0.7]], 
  TemplateBox[{1},
   "Spacer1"], 
  StyleBox["\<\"v2.3\"\>",
   FontFamily->"Source Sans Pro",
   FontSize->24,
   FontColor->RGBColor[0.3, 0.5, 0.8]]}]], "Title",
 CellTags->"$title",ExpressionUUID->"2ce60114-da34-4572-8302-84befa069544"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{4},
   "Spacer1"], 
  TemplateBox[{
   "Start Thulium","Click to initialize the kernel.",Hold[If[Length[
         PacletManager`PacletCheckUpdate["QuantityUnits"]] != 0, 
       PacletManager`PacletUpdate["QuantityUnits"]; Quit[]; 
       Null]; $CellContext`localPath = StringReplace[
        NotebookDirectory[], "\\" -> "/"]; Get[
       StringJoin[$CellContext`localPath, "library/initialization.wl"]]; 
     Cells[CellTags -> "$title"]; NotebookDelete[
       Cells[CellTags -> "$init"]]; SelectionMove[
       First[
        Cells[CellTags -> "$title"]], After, Cell, AutoScroll -> False]; 
     NotebookWrite[
       EvaluationNotebook[], {
        Cell[
         BoxData[
          RowBox[{
            TemplateBox[{4}, "Spacer1"], 
            
            TemplateBox[{
             "Initialize Thulium", "Click to initialize the kernel.", 
              Unevaluated[$CellContext`InitializePackage]}, 
             "TextButtonMonitored"], 
            TemplateBox[{4}, "Spacer1"], 
            
            TemplateBox[{
             "Initialize Parser", "Click to initialize the parser.", 
              Unevaluated[$CellContext`InitializeParser]}, 
             "TextButtonMonitored"], 
            TemplateBox[{4}, "Spacer1"], 
            TemplateBox[{"Initialize Songs", "Click to initialize the songs.", 
              Unevaluated[$CellContext`update]}, "TextButtonMonitored"], 
            TemplateBox[{4}, "Spacer1"], 
            TemplateBox[{"Start Front End", "Click to run the front end.", 
              Hold[$CellContext`homepage]}, "TextButton"], 
            TemplateBox[{4}, "Spacer1"]}]], "Controls", CellTags -> 
         "$controls"], 
        Cell[
         BoxData[Null], "Hidden", CellTags -> "$monitor"]}]; Null]},
   "LogoButton"], 
  TemplateBox[{4},
   "Spacer1"]}]], "Init",
 CellTags->"$init",ExpressionUUID->"78b5a544-4cac-4931-9031-7116b9f2936b"]
},
Editable->False,
Saveable->False,
NotebookEventActions->{"ReturnKeyDown" :> FE`Evaluate[
    FEPrivate`FindAndClickDefaultButton[]], {"MenuCommand", "EvaluateCells"} :> 
  FE`Evaluate[
    FEPrivate`FindAndClickDefaultButton[]], {
   "MenuCommand", "HandleShiftReturn"} :> FE`Evaluate[
    FEPrivate`FindAndClickDefaultButton[]], {
   "MenuCommand", "EvaluateNextCell"} :> FE`Evaluate[
    FEPrivate`FindAndClickDefaultButton[]], "EscapeKeyDown" :> (FE`Evaluate[
     FEPrivate`FindAndClickCancelButton[]]; DialogReturn[$Canceled]), 
  "WindowClose" :> (FE`Evaluate[
     FEPrivate`FindAndClickCancelButton[]]; DialogReturn[$Canceled])},
CellGrouping->Manual,
WindowSize->{1440, 900},
WindowMargins->{{229, Automatic}, {Automatic, 32}},
WindowFrame->"ModelessDialog",
WindowElements->{},
WindowFrameElements->{"CloseBox", "MinimizeBox", "ZoomBox"},
WindowTitle->" Thulium Music Player 2.3",
ShowCellBracket->False,
Evaluatable->False,
CellContext->"Global`",
ShowCellLabel->False,
ShowCellTags->False,
Magnification->2,
Background->RGBColor[1., 1., 1.],
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Title"], Deletable -> False, ShowCellBracket -> False, 
    CellMargins -> {{40, 40}, {16, 32}}, Deployed -> True, Evaluatable -> 
    False, TextAlignment -> Center, ShowStringCharacters -> False], 
   Cell[
    StyleData["Init"], ShowCellBracket -> False, 
    CellMargins -> {{24, 24}, {60, 60}}, Deployed -> True, TextAlignment -> 
    Center], 
   Cell[
    StyleData["Controls"], Deletable -> False, ShowCellBracket -> False, 
    CellMargins -> {{24, 24}, {8, 8}}, Deployed -> True, TextAlignment -> 
    Center], 
   Cell[
    StyleData["Tip"], ShowCellBracket -> False, 
    CellMargins -> {{60, 60}, {8, 4}}, Deployed -> True, Copyable -> False, 
    ShowCellLabel -> False, TextAlignment -> Center, 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        AdjustmentBox[
         RowBox[{
           StyleBox["\[LightBulb]", FontSize -> 18], 
           TemplateBox[{4}, "Spacer1"], 
           StyleBox[#, FontFamily -> "Calibri", FontSize -> 16]}], 
         BoxBaselineShift -> 0, BoxMargins -> {{2, 2}, {2, 2}}], Background -> 
        RGBColor[1, 0.96, 0.98], RoundingRadius -> {8, 8}, ContentPadding -> 
        True, FrameStyle -> None]& )}], 
   Cell[
    StyleData["Hidden"], CellMargins -> {{24, 24}, {0, 0}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellGroupingRules -> "InputGrouping", CellSize -> {Inherited, 1}, 
    FontSize -> 1, FontColor -> RGBColor[0, 0, 0, 0]], 
   Cell[
    StyleData["ButtonTooltip"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        RowBox[{
          TemplateBox[{1, 24}, "Spacer2"], 
          AdjustmentBox[
           
           StyleBox[#, FontFamily -> "Calibri", FontSize -> 24, FontColor -> 
            RGBColor[0, 0, 0]], BoxBaselineShift -> -0.1], 
          TemplateBox[{1, 24}, "Spacer2"]}], Background -> 
        RGBColor[1, 1, 0.9, 0.8], ImageMargins -> {{1, 1}, {0, 0}}, 
        ImageSize -> {Automatic, Automatic}, FrameStyle -> {1, 
          RGBColor[0.8, 0.8, 0.7, 0.2]}, RoundingRadius -> {8, 8}, 
        ContentPadding -> True, BaselinePosition -> 1]& )}], 
   Cell[
    StyleData["LogoButtonDisplay"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{#3, 
         FilledCurveBox[{
           BezierCurve[CompressedData["
1:eJxTTMoPSmViYGBQAmIQbQwCil0OIuvcH1Zl1BwA8z/3OMyaCQS9tQeqQRJC
/Q6trwN3yLk2wvmKG4oyJjq1wPniN899D17TfuDwV42Yfr8ehzQQKOiCyD/p
gPPfAI1pbc4hmt9/CGigfxScD3bXTDGI+4Lb4Xx5kANrmuF8zRigzpKGAyBv
ibwLgOg/VH2g0Jbr+mKPZIfriwtsuW5XQtQ7JjuAxWdUHgCrs0uGmB+K4AcB
nfVaEI3fWXAASjtAxSH2CVXC+WD/nK6D88H+edoIsa8i8wDYnVbNEH5MIUT+
e7MDyNjAhIIDDCBwq8WBC+TgWfkQ+862wvng+IrtgPPBdEGXgwfQGes+F8P5
MPfD+GB77KsO/LtS8VItBMqPrz4ADhek9AAATHMBgw==
            "]]}], 
         RGBColor[1, 1, 1], 
         FilledCurveBox[{
           BezierCurve[CompressedData["
1:eJxTTMoPSmViYGAwBGIQffirRkz/iUaHQluu64tXlBxA5/cfAgqsbXQAcQsy
Sw7skGt9HZjS6ADk2XKxlxxY5/6wSqSuAaL+QtEBsLqDdQ5A0XXupkUQ/Ytr
HMD6OIog6v9VO4Dt+VV4YNZMINCtdtCMAar8UHjAA6SxvcohDQTeFR4Ai3+p
gOh/UXggCMTQLXcwBgH5ogMgaY09pQ5nzwDBlSKI+jN1DtVA6x9aNBPkg5xr
m1TrsO3z3ysV15oOfAM661BntQNYfFkTRP2ESoj8viaI/aWlUPc2QcIjpgji
f6+WAyBjq5YUORw8tdB126HWA2DxN1C+VTskPKrLHISaD5xa6NQBCe9pVQ5r
ZKJSrAU6IOGxsc7BcsuJsn132yH8pw0Oi1yBLmhuO/AmEGjjQSifu/UAOJz3
Njj8u1LxUu1BywFDDqBJmxsc3EAO3toCcd+SBgeweG8LxL8k8MHx2VrlAI63
fcUE+eB08bwKEr+TiiHu31vjsAQofL28GOL+07UO4HCqKT4Ajkfregd5oDN3
NBVD3HugwQGs7ydUv2AjJLw1Sg6AlMnFN0LsC8NMr5TyAWtplCQ=
            "]]}]}, ImageSize -> 240]& )}], 
   Cell[
    StyleData["TextButtonDisplay"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        RowBox[{
          TemplateBox[{4}, "Spacer1"], 
          AdjustmentBox[
           
           StyleBox[#, FontFamily -> "Sitka Text", FontSize -> 15, 
            FontColor -> #2], BoxBaselineShift -> 0.2], 
          TemplateBox[{4}, "Spacer1"]}], Background -> #3, 
        ImageMargins -> {{1, 1}, {0, 0}}, ImageSize -> {Automatic, 32}, 
        BoxFrame -> {{0, 0}, {0, 0}}, RoundingRadius -> {8, 8}, 
        ContentPadding -> True, BaselinePosition -> 1]& )}], 
   Cell[
    StyleData["ButtonTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{True -> TooltipBox[
           TagBox[
            TagBox[
             PaneSelectorBox[{True -> #2, False -> #3}, 
              Dynamic[
               CurrentValue["MouseButtonTest"]]], 
             EventHandlerTag[{"MouseClicked" :> ReleaseHold[#4]}]], 
            MouseAppearanceTag["LinkHand"]], 
           TemplateBox[{#5}, "ButtonTooltip"], TooltipDelay -> 0.2, 
           TooltipStyle -> {
            CellFrame -> {{0, 0}, {0, 0}}, Background -> RGBColor[0, 0, 0, 0]}
            ], False -> #}, 
        Dynamic[
         CurrentValue["MouseOver"]]]& )}], 
   Cell[
    StyleData["TextButton"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TemplateBox[{#, 
           RGBColor[0.2, 0.1, 0], 
           RGBColor[0.92, 0.96, 1]}, "TextButtonDisplay"], 
         TemplateBox[{#, 
           RGBColor[0, 0, 0], 
           RGBColor[0.5, 0.8, 1]}, "TextButtonDisplay"], 
         TemplateBox[{#, 
           RGBColor[0.08, 0.04, 0], 
           RGBColor[0.8, 0.9, 1]}, "TextButtonDisplay"], #3, #2}, 
        "ButtonTemplate"]& )}], 
   Cell[
    StyleData["LogoButton"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TemplateBox[{#, 
           RGBColor[0.2, 0.1, 0], 
           RGBColor[0.8, 0.96, 1]}, "LogoButtonDisplay"], 
         TemplateBox[{#, 
           RGBColor[0, 0, 0], 
           RGBColor[0.5, 0.8, 1]}, "LogoButtonDisplay"], 
         TemplateBox[{#, 
           RGBColor[0.08, 0.04, 0], 
           RGBColor[0.72, 0.9, 1]}, "LogoButtonDisplay"], #3, #2}, 
        "ButtonTemplate"]& )}], 
   Cell[
    StyleData["TextButtonMonitored"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{#, #2, 
         Hold[NotebookLocate["$monitor"]; NotebookWrite[
            EvaluationNotebook[], 
            Cell[
             BoxData[
              MakeBoxes[
               Evaluate[#3]]], "Hidden", CellTags -> "$monitor"], All]; 
          SelectionEvaluate[
            EvaluationNotebook[]]; NotebookLocate["$title"]; Null]}, 
        "TextButton"]& )}], 
   Cell[
    StyleData["PrintTemporary", StyleDefinitions -> "PrintTemporary"], 
    ShowCellBracket -> False, CellMargins -> {{60, 60}, {8, 4}}, Deployed -> 
    True, Copyable -> False, TextAlignment -> Center, FontFamily -> "Calibri",
     FontSize -> 16], 
   Cell[
    StyleData["Input", StyleDefinitions -> "Input"], Editable -> True, 
    StyleKeyMapping -> {">" -> "Music"}, Evaluatable -> True, ContextMenu -> {
      MenuItem["Cut", "Cut"], 
      MenuItem["Copy", "Copy"], 
      MenuItem["Paste", 
       FrontEnd`Paste[After]], Delimiter, 
      MenuItem["Evaluate Cell", "EvaluateCells"]}, NumberMarks -> False]}, 
  Visible -> False, FrontEndVersion -> 
  "11.3 for Microsoft Windows (64-bit) (March 6, 2018)", StyleDefinitions -> 
  "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "$title"->{
  Cell[605, 21, 421, 13, 140, "Title",ExpressionUUID->"2ce60114-da34-4572-8302-84befa069544",
   CellTags->"$title"]},
 "$init"->{
  Cell[1029, 36, 1926, 45, 140, "Init",ExpressionUUID->"78b5a544-4cac-4931-9031-7116b9f2936b",
   CellTags->"$init"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"$title", 11265, 275},
 {"$init", 11396, 278}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[605, 21, 421, 13, 140, "Title",ExpressionUUID->"2ce60114-da34-4572-8302-84befa069544",
 CellTags->"$title"],
Cell[1029, 36, 1926, 45, 140, "Init",ExpressionUUID->"78b5a544-4cac-4931-9031-7116b9f2936b",
 CellTags->"$init"]
}
]
*)

(* End of internal cache information *)

